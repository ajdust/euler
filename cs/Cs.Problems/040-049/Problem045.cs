namespace Cs.Problems
{
    /// <title>Triangular Hexagonal Pentagonal</title>
    /// <summary>
    /// Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
    /// Triangle    Tn=n(n+1)/2    1, 3, 6, 10, 15, ...
    /// Pentagonal  Pn=n(3n-1)/2   1, 5, 12, 22, 35, ...
    /// Hexagonal   Hn=n(2n-1) 	   1, 6, 15, 28, 45, ...
    /// 
    /// It can be verified that T285 = P165 = H143 = 40755.
    /// 
    /// Find the next triangle number that is also pentagonal and hexagonal.
    /// </summary>
    public class Problem045 : IProblem
    {
        private long Tn = 285;
        private long T = 40755;

        private long Pn = 165;
        private long P = 40755;

        private long Hn = 143;
        private long H = 40755;

        private long BruteSolve()
        {
            // move past first match
            Tn++;
            Pn++;
            Hn++;

            // remove division by 2 from the calculation to be faster
            T = Tn * Tn + Tn;
            P = 3 * Pn * Pn - Pn;
            H = 4 * Hn * Hn - 2 * Hn;

            var limit = 1000000;
            while (Tn < limit && !(T == H && H == P))
            {
                for (; H > P; ++Pn, P = 3 * Pn * Pn - Pn);
                for (; P > T; ++Tn, T = Tn * Tn + Tn);
                for (; T > H; ++Hn, H = 4 * Hn * Hn - 2 * Hn);
            }

            if (Tn >= limit)
                return -1;

            return T >> 1;
        }

        public string Solve()
        {
            return BruteSolve().ToString();
        }
    }
}
